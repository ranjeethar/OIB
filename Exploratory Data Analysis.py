# -*- coding: utf-8 -*-
"""oib.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ntCHyc12PgeJ6k5xyCTywaE0M_8ZoYDf
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns
import os

os.getcwd()

df=pd.read_csv('retail_sales_dataset.csv')

df.head()

df.shape

df.columns

df.info()

df.isnull().sum()

df['Age'].mean()

df['Quantity'].median()

df['Price per Unit'].std()

df.describe()

df['Quantity'].sum()

df.dtypes

df['Date']=pd.to_datetime(df['Date'],infer_datetime_format=True)

df.plot(figsize=(5,4))

product_cat_fr=df['Product Category'].value_counts()
product_cat_fr

fig=plt.figure()
ax=fig.add_axes([0,0,1,1])
l=['Clothing','Electronics','Beauty']
s=[351,342,307]
plt.title("Frequency of product purchased")
plt.pie(s,labels=l,autopct='%0.1f%%')
plt.show()

ax=sns.countplot(x='Quantity',data=df,color='c')

ax=sns.countplot(x='Gender',data=df,color='m')
for bar in ax.containers:
  ax.bar_label(bar)

dy=df.groupby(['Product Category'],as_index=False)['Quantity'].sum().sort_values(by='Product Category',ascending=True)
dy

"""**Time Series Analysis**"""

#assuming the dataset has a 'Data' column, convert it to datetime format
df['Date']=pd.to_datetime(df['Date'])

#Extracting year,quarter and month from the 'Date' column
df['Year']=df['Date'].dt.year
df['Quarter']=df['Date'].dt.quarter
df['Month']=df['Date'].dt.month

#Group by year ,quarter and month ,and calculate the total amount of transcations
total_amount_by_year=df.groupby('Year')['Total Amount'].sum()
total_amount_by_quarter=df.groupby(['Year','Quarter'])['Total Amount'].sum()
total_amount_by_month=df.groupby(['Year','Month'])['Total Amount'].sum()

#Print the total amount of transcations changed over a years,quarters and months
print("\nTotal Amount of transcation changed over Years:")
print(total_amount_by_year)

print("\nTotal Amount of transcation changed over Quarter:")
print(total_amount_by_quarter)

print("\nTotal Amount of transcation changed over Month:")
print(total_amount_by_month)

#Plot bar graphs for total amount of transcations changed over years
plt.figure(figsize=(10,6))

#Bar graph for total amount of transcations changed over years
plt.subplot(1,3,1)
total_amount_by_year.plot(kind='bar',color='y')
plt.title('Total Amount of transcation changed over Quarter')
plt.xlabel('Quarter')
plt.ylabel('Total Amount')

#Bar graph for total amount  of transcation changed over month
plt.subplot(1,3,3)
total_amount_by_month.plot(kind='bar',color='lightgreen')
plt.title('Total Amount of transcation changed over Month')
plt.xlabel('Month')
plt.ylabel('Total Amount')

plt.tight_layout()
plt.show()

df.index

plt.figure(figsize=(10,5))
sns.lineplot(x='Date',y='Total Amount',data=df)
plt.show()

price_stats=df['Price per Unit'].describe()
print("\nDescriptive Statistics of Price per unit:")
print(price_stats)

plt.figure(figsize=(8,5))
plt.hist(df['Price per Unit'],bins=20,color='y',edgecolor='black')
plt.title('Distribution of price per unit')
plt.xlabel('Price per unit')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

df['Total Amount']=df['Quantity']*df['Price per Unit']
total_amount=df['Total Amount'].sum()
print("\nTotal Revenue Generated: $",total_amount)

#calcule the average price per unit over time
avg_price_over_time=df.groupby('Date')['Price per Unit'].mean()

#Print the average Price per unit over time
print("\nAverage Price per Unit over time:")
print(avg_price_over_time)